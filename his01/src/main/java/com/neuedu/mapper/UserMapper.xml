<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.User" >
    <id column="userid" property="userid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="userType" property="usertype" jdbcType="INTEGER" />
    <result column="docTitleId" property="doctitleid" jdbcType="INTEGER" />
    <result column="IsScheduling" property="isscheduling" jdbcType="INTEGER" />
    <result column="departmentid" property="departmentid" jdbcType="INTEGER" />
    <result column="registLevelid" property="registlevelid" jdbcType="INTEGER" />
    <result column="delMark" property="delmark" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    userid, username, password, realname, userType, docTitleId, IsScheduling, departmentid, 
    registLevelid, delMark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.User" >
    insert into user (userid, username, password, 
      realname, userType, docTitleId, 
      IsScheduling, departmentid, registLevelid, 
      delMark)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{usertype,jdbcType=INTEGER}, #{doctitleid,jdbcType=INTEGER}, 
      #{isscheduling,jdbcType=INTEGER}, #{departmentid,jdbcType=INTEGER}, #{registlevelid,jdbcType=INTEGER}, 
      #{delmark,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
      <if test="doctitleid != null" >
        docTitleId,
      </if>
      <if test="isscheduling != null" >
        IsScheduling,
      </if>
      <if test="departmentid != null" >
        departmentid,
      </if>
      <if test="registlevelid != null" >
        registLevelid,
      </if>
      <if test="delmark != null" >
        delMark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="doctitleid != null" >
        #{doctitleid,jdbcType=INTEGER},
      </if>
      <if test="isscheduling != null" >
        #{isscheduling,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="registlevelid != null" >
        #{registlevelid,jdbcType=INTEGER},
      </if>
      <if test="delmark != null" >
        #{delmark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="doctitleid != null" >
        docTitleId = #{doctitleid,jdbcType=INTEGER},
      </if>
      <if test="isscheduling != null" >
        IsScheduling = #{isscheduling,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null" >
        departmentid = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="registlevelid != null" >
        registLevelid = #{registlevelid,jdbcType=INTEGER},
      </if>
      <if test="delmark != null" >
        delMark = #{delmark,jdbcType=INTEGER},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      userType = #{usertype,jdbcType=INTEGER},
      docTitleId = #{doctitleid,jdbcType=INTEGER},
      IsScheduling = #{isscheduling,jdbcType=INTEGER},
      departmentid = #{departmentid,jdbcType=INTEGER},
      registLevelid = #{registlevelid,jdbcType=INTEGER},
      delMark = #{delmark,jdbcType=INTEGER}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  
  <select id="findUserByUnamePwd" parameterType="com.neuedu.pojo.User" resultType="com.neuedu.pojo.User">
  	select * from user where delmark=0 and  username = #{username} and password = #{password}
  </select>
  
  
  <select id="findUsers" parameterType="com.neuedu.pojo.User" resultType="com.neuedu.pojo.User">
  	select username,realname,departmentid,userid,
	(select constantname from constantitem c where c.constrantitemid = u.usertype) yhlx,
	(select deptname from department d where d.departmentid = u.departmentid) deptname,
	(select constantname from constantitem c where c.constrantitemid = u.doctitleid) yszc,
	(select r.rolename from trole r, user_role ur where r.roleid = ur.roleid and ur.userid= u.userid) rolename,
	u.isscheduling
	from user u
	<where>
		u.delmark = 0
		<if test="username != null">
		and  username = #{username}
		</if>
		<if test="realname != null">
		and  realname = #{realname}
		</if>
		<if test="departmentid != null">
		and  departmentid = #{departmentid}
		</if>
		
	</where>
	   limit #{beginIndex},#{pageSize}
  </select>
  
  
  <select id="findCount" parameterType="com.neuedu.pojo.User" resultType="int">
  	select count(*)
	from user u
	<where>
		u.delmark = 0
		<if test="username != null">
		and  username = #{username}
		</if>
		<if test="realname != null">
		and  realname = #{realname}
		</if>
		<if test="departmentid != null">
		and  departmentid = #{departmentid}
		</if>
		
	</where>
	 
  </select>
  
</mapper>